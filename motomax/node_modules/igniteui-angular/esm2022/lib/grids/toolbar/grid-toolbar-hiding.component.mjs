import { Component, ViewChild } from '@angular/core';
import { IgxColumnActionsComponent } from '../column-actions/column-actions.component';
import { IgxColumnHidingDirective } from '../column-actions/column-hiding.directive';
import { BaseToolbarColumnActionsDirective } from './grid-toolbar.base';
import { IgxToggleDirective } from '../../directives/toggle/toggle.directive';
import { IgxIconComponent } from '../../icon/icon.component';
import { IgxButtonDirective } from '../../directives/button/button.directive';
import { NgIf, AsyncPipe } from '@angular/common';
import * as i0 from "@angular/core";
/* blazorElement */
/* wcElementTag: igc-grid-toolbar-hiding */
/* blazorIndirectRender */
/* jsonAPIManageItemInMarkup */
/* singleInstanceIdentifier */
/**
 * Provides a pre-configured column hiding component for the grid.
 *
 *
 * @igxModule IgxGridToolbarModule
 * @igxParent IgxGridToolbarComponent
 *
 * @example
 * ```html
 *  <igx-grid-toolbar-hiding></igx-grid-toolbar-hiding>
 * ```
 */
export class IgxGridToolbarHidingComponent extends BaseToolbarColumnActionsDirective {
    set content(content) {
        this.columnActionsUI = content;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: IgxGridToolbarHidingComponent, deps: null, target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.2.4", type: IgxGridToolbarHidingComponent, isStandalone: true, selector: "igx-grid-toolbar-hiding", viewQueries: [{ propertyName: "content", first: true, predicate: IgxColumnHidingDirective, descendants: true, read: IgxColumnActionsComponent }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"grid.rendered$ | async\">\n    <button\n        [title]=\"grid?.resourceStrings.igx_grid_toolbar_hiding_button_tooltip\"\n        #btn\n        igxButton=\"outlined\"\n        type=\"button\"\n        name=\"btnColumnHiding\" (click)=\"toggle(btn, ref, actions)\">\n        <igx-icon\n            family=\"default\"\n            [name]=\"!grid.hiddenColumnsCount ? 'show' : 'hide'\">\n        </igx-icon>\n        <span>{{ grid.hiddenColumnsCount }}</span>\n        <span>{{ buttonText }}</span>\n    </button>\n    <igx-column-actions #actions igxColumnHiding igxToggle (opened)=\"focusSearch(ref.element)\" #ref=\"toggle\"\n        [grid]=\"grid\" [title]=\"title || grid?.resourceStrings.igx_grid_toolbar_hiding_title\"\n        [filterColumnsPrompt]=\"prompt || grid?.resourceStrings.igx_grid_toolbar_actions_filter_prompt\"\n        [hideFilter]=\"hideFilter\" [filterCriteria]=\"filterCriteria\" [columnDisplayOrder]=\"columnDisplayOrder\" [columnsAreaMaxHeight]=\"columnsAreaMaxHeight\"\n        [uncheckAllText]=\"uncheckAllText\" [checkAllText]=\"checkAllText\" [indentation]=\"indentetion\">\n    </igx-column-actions>\n</ng-container>\n", dependencies: [{ kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: IgxButtonDirective, selector: "[igxButton]", inputs: ["selected", "igxButton", "igxLabel"], outputs: ["buttonSelected"] }, { kind: "component", type: IgxIconComponent, selector: "igx-icon", inputs: ["family", "name", "active"] }, { kind: "component", type: IgxColumnActionsComponent, selector: "igx-column-actions", inputs: ["grid", "indentation", "columnsAreaMaxHeight", "hideFilter", "title", "filterColumnsPrompt", "filterCriteria", "columnDisplayOrder", "uncheckAllText", "checkAllText", "id"], outputs: ["columnToggled"] }, { kind: "directive", type: IgxColumnHidingDirective, selector: "[igxColumnHiding]" }, { kind: "directive", type: IgxToggleDirective, selector: "[igxToggle]", inputs: ["id"], outputs: ["opened", "opening", "closed", "closing", "appended"], exportAs: ["toggle"] }, { kind: "pipe", type: AsyncPipe, name: "async" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: IgxGridToolbarHidingComponent, decorators: [{
            type: Component,
            args: [{ selector: 'igx-grid-toolbar-hiding', standalone: true, imports: [NgIf, IgxButtonDirective, IgxIconComponent, IgxColumnActionsComponent, IgxColumnHidingDirective, IgxToggleDirective, AsyncPipe], template: "<ng-container *ngIf=\"grid.rendered$ | async\">\n    <button\n        [title]=\"grid?.resourceStrings.igx_grid_toolbar_hiding_button_tooltip\"\n        #btn\n        igxButton=\"outlined\"\n        type=\"button\"\n        name=\"btnColumnHiding\" (click)=\"toggle(btn, ref, actions)\">\n        <igx-icon\n            family=\"default\"\n            [name]=\"!grid.hiddenColumnsCount ? 'show' : 'hide'\">\n        </igx-icon>\n        <span>{{ grid.hiddenColumnsCount }}</span>\n        <span>{{ buttonText }}</span>\n    </button>\n    <igx-column-actions #actions igxColumnHiding igxToggle (opened)=\"focusSearch(ref.element)\" #ref=\"toggle\"\n        [grid]=\"grid\" [title]=\"title || grid?.resourceStrings.igx_grid_toolbar_hiding_title\"\n        [filterColumnsPrompt]=\"prompt || grid?.resourceStrings.igx_grid_toolbar_actions_filter_prompt\"\n        [hideFilter]=\"hideFilter\" [filterCriteria]=\"filterCriteria\" [columnDisplayOrder]=\"columnDisplayOrder\" [columnsAreaMaxHeight]=\"columnsAreaMaxHeight\"\n        [uncheckAllText]=\"uncheckAllText\" [checkAllText]=\"checkAllText\" [indentation]=\"indentetion\">\n    </igx-column-actions>\n</ng-container>\n" }]
        }], propDecorators: { content: [{
                type: ViewChild,
                args: [IgxColumnHidingDirective, { read: IgxColumnActionsComponent }]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC10b29sYmFyLWhpZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9pZ25pdGV1aS1hbmd1bGFyL3NyYy9saWIvZ3JpZHMvdG9vbGJhci9ncmlkLXRvb2xiYXItaGlkaW5nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9ncmlkcy90b29sYmFyL2dyaWQtdG9vbGJhci1oaWRpbmcuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDdkYsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDckYsT0FBTyxFQUFFLGlDQUFpQyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDOUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDN0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDOUUsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUFHbEQsbUJBQW1CO0FBQ25CLDJDQUEyQztBQUMzQywwQkFBMEI7QUFDMUIsK0JBQStCO0FBQy9CLDhCQUE4QjtBQUM5Qjs7Ozs7Ozs7Ozs7R0FXRztBQU9ILE1BQU0sT0FBTyw2QkFBOEIsU0FBUSxpQ0FBaUM7SUFFaEYsSUFDWSxPQUFPLENBQUMsT0FBa0M7UUFDbEQsSUFBSSxDQUFDLGVBQWUsR0FBRyxPQUFPLENBQUM7SUFDbkMsQ0FBQzs4R0FMUSw2QkFBNkI7a0dBQTdCLDZCQUE2Qiw0SEFFM0Isd0JBQXdCLDJCQUFTLHlCQUF5QixvRENuQ3pFLG1wQ0FxQkEsNENEVWMsSUFBSSw2RkFBRSxrQkFBa0Isb0lBQUUsZ0JBQWdCLDJGQUFFLHlCQUF5QixrUkFBRSx3QkFBd0IsOERBQUUsa0JBQWtCLDBKQUFFLFNBQVM7OzJGQUUvSCw2QkFBNkI7a0JBTnpDLFNBQVM7K0JBQ0kseUJBQXlCLGNBRXZCLElBQUksV0FDUCxDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUIsRUFBRSx3QkFBd0IsRUFBRSxrQkFBa0IsRUFBRSxTQUFTLENBQUM7OEJBSzdILE9BQU87c0JBRGxCLFNBQVM7dUJBQUMsd0JBQXdCLEVBQUUsRUFBQyxJQUFJLEVBQUUseUJBQXlCLEVBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSWd4Q29sdW1uQWN0aW9uc0NvbXBvbmVudCB9IGZyb20gJy4uL2NvbHVtbi1hY3Rpb25zL2NvbHVtbi1hY3Rpb25zLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBJZ3hDb2x1bW5IaWRpbmdEaXJlY3RpdmUgfSBmcm9tICcuLi9jb2x1bW4tYWN0aW9ucy9jb2x1bW4taGlkaW5nLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBCYXNlVG9vbGJhckNvbHVtbkFjdGlvbnNEaXJlY3RpdmUgfSBmcm9tICcuL2dyaWQtdG9vbGJhci5iYXNlJztcbmltcG9ydCB7IElneFRvZ2dsZURpcmVjdGl2ZSB9IGZyb20gJy4uLy4uL2RpcmVjdGl2ZXMvdG9nZ2xlL3RvZ2dsZS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgSWd4SWNvbkNvbXBvbmVudCB9IGZyb20gJy4uLy4uL2ljb24vaWNvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSWd4QnV0dG9uRGlyZWN0aXZlIH0gZnJvbSAnLi4vLi4vZGlyZWN0aXZlcy9idXR0b24vYnV0dG9uLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBOZ0lmLCBBc3luY1BpcGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuXG5cbi8qIGJsYXpvckVsZW1lbnQgKi9cbi8qIHdjRWxlbWVudFRhZzogaWdjLWdyaWQtdG9vbGJhci1oaWRpbmcgKi9cbi8qIGJsYXpvckluZGlyZWN0UmVuZGVyICovXG4vKiBqc29uQVBJTWFuYWdlSXRlbUluTWFya3VwICovXG4vKiBzaW5nbGVJbnN0YW5jZUlkZW50aWZpZXIgKi9cbi8qKlxuICogUHJvdmlkZXMgYSBwcmUtY29uZmlndXJlZCBjb2x1bW4gaGlkaW5nIGNvbXBvbmVudCBmb3IgdGhlIGdyaWQuXG4gKlxuICpcbiAqIEBpZ3hNb2R1bGUgSWd4R3JpZFRvb2xiYXJNb2R1bGVcbiAqIEBpZ3hQYXJlbnQgSWd4R3JpZFRvb2xiYXJDb21wb25lbnRcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgaHRtbFxuICogIDxpZ3gtZ3JpZC10b29sYmFyLWhpZGluZz48L2lneC1ncmlkLXRvb2xiYXItaGlkaW5nPlxuICogYGBgXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWdyaWQtdG9vbGJhci1oaWRpbmcnLFxuICAgIHRlbXBsYXRlVXJsOiAnLi9ncmlkLXRvb2xiYXItaGlkaW5nLmNvbXBvbmVudC5odG1sJyxcbiAgICBzdGFuZGFsb25lOiB0cnVlLFxuICAgIGltcG9ydHM6IFtOZ0lmLCBJZ3hCdXR0b25EaXJlY3RpdmUsIElneEljb25Db21wb25lbnQsIElneENvbHVtbkFjdGlvbnNDb21wb25lbnQsIElneENvbHVtbkhpZGluZ0RpcmVjdGl2ZSwgSWd4VG9nZ2xlRGlyZWN0aXZlLCBBc3luY1BpcGVdXG59KVxuZXhwb3J0IGNsYXNzIElneEdyaWRUb29sYmFySGlkaW5nQ29tcG9uZW50IGV4dGVuZHMgQmFzZVRvb2xiYXJDb2x1bW5BY3Rpb25zRGlyZWN0aXZlIHtcblxuICAgIEBWaWV3Q2hpbGQoSWd4Q29sdW1uSGlkaW5nRGlyZWN0aXZlLCB7cmVhZDogSWd4Q29sdW1uQWN0aW9uc0NvbXBvbmVudH0pXG4gICAgcHJpdmF0ZSBzZXQgY29udGVudChjb250ZW50OiBJZ3hDb2x1bW5BY3Rpb25zQ29tcG9uZW50KSB7XG4gICAgICAgIHRoaXMuY29sdW1uQWN0aW9uc1VJID0gY29udGVudDtcbiAgICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwiZ3JpZC5yZW5kZXJlZCQgfCBhc3luY1wiPlxuICAgIDxidXR0b25cbiAgICAgICAgW3RpdGxlXT1cImdyaWQ/LnJlc291cmNlU3RyaW5ncy5pZ3hfZ3JpZF90b29sYmFyX2hpZGluZ19idXR0b25fdG9vbHRpcFwiXG4gICAgICAgICNidG5cbiAgICAgICAgaWd4QnV0dG9uPVwib3V0bGluZWRcIlxuICAgICAgICB0eXBlPVwiYnV0dG9uXCJcbiAgICAgICAgbmFtZT1cImJ0bkNvbHVtbkhpZGluZ1wiIChjbGljayk9XCJ0b2dnbGUoYnRuLCByZWYsIGFjdGlvbnMpXCI+XG4gICAgICAgIDxpZ3gtaWNvblxuICAgICAgICAgICAgZmFtaWx5PVwiZGVmYXVsdFwiXG4gICAgICAgICAgICBbbmFtZV09XCIhZ3JpZC5oaWRkZW5Db2x1bW5zQ291bnQgPyAnc2hvdycgOiAnaGlkZSdcIj5cbiAgICAgICAgPC9pZ3gtaWNvbj5cbiAgICAgICAgPHNwYW4+e3sgZ3JpZC5oaWRkZW5Db2x1bW5zQ291bnQgfX08L3NwYW4+XG4gICAgICAgIDxzcGFuPnt7IGJ1dHRvblRleHQgfX08L3NwYW4+XG4gICAgPC9idXR0b24+XG4gICAgPGlneC1jb2x1bW4tYWN0aW9ucyAjYWN0aW9ucyBpZ3hDb2x1bW5IaWRpbmcgaWd4VG9nZ2xlIChvcGVuZWQpPVwiZm9jdXNTZWFyY2gocmVmLmVsZW1lbnQpXCIgI3JlZj1cInRvZ2dsZVwiXG4gICAgICAgIFtncmlkXT1cImdyaWRcIiBbdGl0bGVdPVwidGl0bGUgfHwgZ3JpZD8ucmVzb3VyY2VTdHJpbmdzLmlneF9ncmlkX3Rvb2xiYXJfaGlkaW5nX3RpdGxlXCJcbiAgICAgICAgW2ZpbHRlckNvbHVtbnNQcm9tcHRdPVwicHJvbXB0IHx8IGdyaWQ/LnJlc291cmNlU3RyaW5ncy5pZ3hfZ3JpZF90b29sYmFyX2FjdGlvbnNfZmlsdGVyX3Byb21wdFwiXG4gICAgICAgIFtoaWRlRmlsdGVyXT1cImhpZGVGaWx0ZXJcIiBbZmlsdGVyQ3JpdGVyaWFdPVwiZmlsdGVyQ3JpdGVyaWFcIiBbY29sdW1uRGlzcGxheU9yZGVyXT1cImNvbHVtbkRpc3BsYXlPcmRlclwiIFtjb2x1bW5zQXJlYU1heEhlaWdodF09XCJjb2x1bW5zQXJlYU1heEhlaWdodFwiXG4gICAgICAgIFt1bmNoZWNrQWxsVGV4dF09XCJ1bmNoZWNrQWxsVGV4dFwiIFtjaGVja0FsbFRleHRdPVwiY2hlY2tBbGxUZXh0XCIgW2luZGVudGF0aW9uXT1cImluZGVudGV0aW9uXCI+XG4gICAgPC9pZ3gtY29sdW1uLWFjdGlvbnM+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==