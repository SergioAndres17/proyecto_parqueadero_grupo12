import { Directive, HostBinding, Input } from '@angular/core';
import { IgxBaseButtonType, IgxButtonBaseDirective } from './button-base';
import * as i0 from "@angular/core";
/**
 * The IgxIconButtonDirective provides a way to use an icon as a fully functional button.
 *
 * @example
 * ```html
 * <button type="button" igxIconButton="outlined">
 *      <igx-icon>home</igx-icon>
 * </button>
 * ```
 */
export class IgxIconButtonDirective extends IgxButtonBaseDirective {
    constructor() {
        super(...arguments);
        /**
         * @hidden
         * @internal
         */
        this._cssClass = 'igx-icon-button';
    }
    /**
     * Sets the type of the icon button.
     *
     * @example
     * ```html
     * <button type="button" igxIconButton="flat"></button>
     * ```
     */
    set type(type) {
        const t = type ? type : IgxBaseButtonType.Contained;
        if (this._type !== t) {
            this._type = t;
        }
    }
    /**
     * @hidden
     * @internal
     */
    get flat() {
        return this._type === IgxBaseButtonType.Flat;
    }
    /**
     * @hidden
     * @internal
     */
    get contained() {
        return this._type === IgxBaseButtonType.Contained;
    }
    /**
     * @hidden
     * @internal
     */
    get outlined() {
        return this._type === IgxBaseButtonType.Outlined;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: IgxIconButtonDirective, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "18.2.4", type: IgxIconButtonDirective, isStandalone: true, selector: "[igxIconButton]", inputs: { type: ["igxIconButton", "type"] }, host: { properties: { "class.igx-icon-button": "this._cssClass", "class.igx-icon-button--flat": "this.flat", "class.igx-icon-button--contained": "this.contained", "class.igx-icon-button--outlined": "this.outlined" } }, usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.4", ngImport: i0, type: IgxIconButtonDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[igxIconButton]',
                    standalone: true
                }]
        }], propDecorators: { _cssClass: [{
                type: HostBinding,
                args: ['class.igx-icon-button']
            }], type: [{
                type: Input,
                args: ['igxIconButton']
            }], flat: [{
                type: HostBinding,
                args: ['class.igx-icon-button--flat']
            }], contained: [{
                type: HostBinding,
                args: ['class.igx-icon-button--contained']
            }], outlined: [{
                type: HostBinding,
                args: ['class.igx-icon-button--outlined']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvaWduaXRldWktYW5ndWxhci9zcmMvbGliL2RpcmVjdGl2ZXMvYnV0dG9uL2ljb24tYnV0dG9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLHNCQUFzQixFQUFFLE1BQU0sZUFBZSxDQUFDOztBQU8xRTs7Ozs7Ozs7O0dBU0c7QUFLSCxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsc0JBQXNCO0lBSmxFOztRQU9JOzs7V0FHRztRQUVLLGNBQVMsR0FBRyxpQkFBaUIsQ0FBQztLQWtEekM7SUExQ0c7Ozs7Ozs7T0FPRztJQUNILElBQ1csSUFBSSxDQUFDLElBQXVCO1FBQ25DLE1BQU0sQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7UUFDcEQsSUFBSSxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDO1FBQ25CLENBQUM7SUFDTCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFDVyxJQUFJO1FBQ1gsT0FBTyxJQUFJLENBQUMsS0FBSyxLQUFLLGlCQUFpQixDQUFDLElBQUksQ0FBQztJQUNqRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsSUFDVyxTQUFTO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxpQkFBaUIsQ0FBQyxTQUFTLENBQUM7SUFDdEQsQ0FBQztJQUVEOzs7T0FHRztJQUNILElBQ1csUUFBUTtRQUNmLE9BQU8sSUFBSSxDQUFDLEtBQUssS0FBSyxpQkFBaUIsQ0FBQyxRQUFRLENBQUM7SUFDckQsQ0FBQzs4R0F6RFEsc0JBQXNCO2tHQUF0QixzQkFBc0I7OzJGQUF0QixzQkFBc0I7a0JBSmxDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsVUFBVSxFQUFFLElBQUk7aUJBQ25COzhCQVNXLFNBQVM7c0JBRGhCLFdBQVc7dUJBQUMsdUJBQXVCO2dCQWtCekIsSUFBSTtzQkFEZCxLQUFLO3VCQUFDLGVBQWU7Z0JBYVgsSUFBSTtzQkFEZCxXQUFXO3VCQUFDLDZCQUE2QjtnQkFVL0IsU0FBUztzQkFEbkIsV0FBVzt1QkFBQyxrQ0FBa0M7Z0JBVXBDLFFBQVE7c0JBRGxCLFdBQVc7dUJBQUMsaUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0QmluZGluZywgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElneEJhc2VCdXR0b25UeXBlLCBJZ3hCdXR0b25CYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9idXR0b24tYmFzZSc7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB0aGUgSWNvbiBCdXR0b24gdHlwZS5cbiAqL1xuZXhwb3J0IHR5cGUgSWd4SWNvbkJ1dHRvblR5cGUgPSB0eXBlb2YgSWd4QmFzZUJ1dHRvblR5cGVba2V5b2YgdHlwZW9mIElneEJhc2VCdXR0b25UeXBlXTtcblxuLyoqXG4gKiBUaGUgSWd4SWNvbkJ1dHRvbkRpcmVjdGl2ZSBwcm92aWRlcyBhIHdheSB0byB1c2UgYW4gaWNvbiBhcyBhIGZ1bGx5IGZ1bmN0aW9uYWwgYnV0dG9uLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBodG1sXG4gKiA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBpZ3hJY29uQnV0dG9uPVwib3V0bGluZWRcIj5cbiAqICAgICAgPGlneC1pY29uPmhvbWU8L2lneC1pY29uPlxuICogPC9idXR0b24+XG4gKiBgYGBcbiAqL1xuQERpcmVjdGl2ZSh7XG4gICAgc2VsZWN0b3I6ICdbaWd4SWNvbkJ1dHRvbl0nLFxuICAgIHN0YW5kYWxvbmU6IHRydWVcbn0pXG5leHBvcnQgY2xhc3MgSWd4SWNvbkJ1dHRvbkRpcmVjdGl2ZSBleHRlbmRzIElneEJ1dHRvbkJhc2VEaXJlY3RpdmUge1xuICAgIHByaXZhdGUgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3R5cGU6IElneEljb25CdXR0b25UeXBlIHwgJyc7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtaWNvbi1idXR0b24nKVxuICAgIHByaXZhdGUgX2Nzc0NsYXNzID0gJ2lneC1pY29uLWJ1dHRvbic7XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgcHJpdmF0ZSBfdHlwZTogSWd4SWNvbkJ1dHRvblR5cGU7XG5cbiAgICAvKipcbiAgICAgKiBTZXRzIHRoZSB0eXBlIG9mIHRoZSBpY29uIGJ1dHRvbi5cbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogYGBgaHRtbFxuICAgICAqIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGlneEljb25CdXR0b249XCJmbGF0XCI+PC9idXR0b24+XG4gICAgICogYGBgXG4gICAgICovXG4gICAgQElucHV0KCdpZ3hJY29uQnV0dG9uJylcbiAgICBwdWJsaWMgc2V0IHR5cGUodHlwZTogSWd4SWNvbkJ1dHRvblR5cGUpIHtcbiAgICAgICAgY29uc3QgdCA9IHR5cGUgPyB0eXBlIDogSWd4QmFzZUJ1dHRvblR5cGUuQ29udGFpbmVkO1xuICAgICAgICBpZiAodGhpcy5fdHlwZSAhPT0gdCkge1xuICAgICAgICAgICAgdGhpcy5fdHlwZSA9IHQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAaGlkZGVuXG4gICAgICogQGludGVybmFsXG4gICAgICovXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtaWNvbi1idXR0b24tLWZsYXQnKVxuICAgIHB1YmxpYyBnZXQgZmxhdCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3R5cGUgPT09IElneEJhc2VCdXR0b25UeXBlLkZsYXQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQGhpZGRlblxuICAgICAqIEBpbnRlcm5hbFxuICAgICAqL1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LWljb24tYnV0dG9uLS1jb250YWluZWQnKVxuICAgIHB1YmxpYyBnZXQgY29udGFpbmVkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5fdHlwZSA9PT0gSWd4QmFzZUJ1dHRvblR5cGUuQ29udGFpbmVkO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEBoaWRkZW5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKi9cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1pY29uLWJ1dHRvbi0tb3V0bGluZWQnKVxuICAgIHB1YmxpYyBnZXQgb3V0bGluZWQoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLl90eXBlID09PSBJZ3hCYXNlQnV0dG9uVHlwZS5PdXRsaW5lZDtcbiAgICB9XG59XG4iXX0=