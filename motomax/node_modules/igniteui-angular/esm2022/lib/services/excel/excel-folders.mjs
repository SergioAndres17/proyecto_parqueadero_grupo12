import { ExcelFileTypes, ExcelFolderTypes } from './excel-enums';
/** @hidden */
export class RootExcelFolder {
    get folderName() {
        return '';
    }
    childFiles() {
        return [ExcelFileTypes.ContentTypesFile];
    }
    childFolders() {
        return [
            ExcelFolderTypes.RootRelsExcelFolder,
            ExcelFolderTypes.DocPropsExcelFolder,
            ExcelFolderTypes.XLExcelFolder
        ];
    }
}
/** @hidden */
export class RootRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.RootRelsFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class DocPropsExcelFolder {
    get folderName() {
        return 'docProps';
    }
    childFiles() {
        return [
            ExcelFileTypes.AppFile,
            ExcelFileTypes.CoreFile
        ];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class XLExcelFolder {
    get folderName() {
        return 'xl';
    }
    childFiles(data) {
        const retVal = [
            ExcelFileTypes.StyleFile,
            ExcelFileTypes.WorkbookFile
        ];
        if (!data.isEmpty || data.options.alwaysExportHeaders) {
            retVal.push(ExcelFileTypes.SharedStringsFile);
        }
        return retVal;
    }
    childFolders(data) {
        const retVal = [
            ExcelFolderTypes.XLRelsExcelFolder,
            ExcelFolderTypes.ThemeExcelFolder,
            ExcelFolderTypes.WorksheetsExcelFolder
        ];
        if ((!data.isEmpty || data.options.alwaysExportHeaders) && data.options.exportAsTable) {
            retVal.push(ExcelFolderTypes.TablesExcelFolder);
        }
        return retVal;
    }
}
/** @hidden */
export class XLRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.WorkbookRelsFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class ThemeExcelFolder {
    get folderName() {
        return 'theme';
    }
    childFiles() {
        return [ExcelFileTypes.ThemeFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class WorksheetsExcelFolder {
    get folderName() {
        return 'worksheets';
    }
    childFiles() {
        return [ExcelFileTypes.WorksheetFile];
    }
    childFolders(data) {
        return (data.isEmpty && !data.options.alwaysExportHeaders) || !data.options.exportAsTable ? [] : [ExcelFolderTypes.WorksheetsRelsExcelFolder];
    }
}
/** @hidden */
export class TablesExcelFolder {
    get folderName() {
        return 'tables';
    }
    childFiles() {
        return [ExcelFileTypes.TablesFile];
    }
    childFolders() {
        return [];
    }
}
/** @hidden */
export class WorksheetsRelsExcelFolder {
    get folderName() {
        return '_rels';
    }
    childFiles() {
        return [ExcelFileTypes.WorksheetRelsFile];
    }
    childFolders() {
        return [];
    }
}
//# sourceMappingURL=data:application/json;base64,