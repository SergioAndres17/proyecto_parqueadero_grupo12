import { ExcelFileTypes, ExcelFolderTypes } from './excel-enums';
import { AppFile, ContentTypesFile, CoreFile, RootRelsFile, SharedStringsFile, StyleFile, TablesFile, ThemeFile, WorkbookFile, WorkbookRelsFile, WorksheetFile, WorksheetRelsFile } from './excel-files';
import { DocPropsExcelFolder, RootExcelFolder, RootRelsExcelFolder, TablesExcelFolder, ThemeExcelFolder, WorksheetsExcelFolder, WorksheetsRelsExcelFolder, XLExcelFolder, XLRelsExcelFolder } from './excel-folders';
/** @hidden */
export class ExcelElementsFactory {
    static getExcelFolder(type) {
        switch (type) {
            case ExcelFolderTypes.RootExcelFolder:
                return new RootExcelFolder();
            case ExcelFolderTypes.RootRelsExcelFolder:
                return new RootRelsExcelFolder();
            case ExcelFolderTypes.DocPropsExcelFolder:
                return new DocPropsExcelFolder();
            case ExcelFolderTypes.XLExcelFolder:
                return new XLExcelFolder();
            case ExcelFolderTypes.XLRelsExcelFolder:
                return new XLRelsExcelFolder();
            case ExcelFolderTypes.ThemeExcelFolder:
                return new ThemeExcelFolder();
            case ExcelFolderTypes.WorksheetsExcelFolder:
                return new WorksheetsExcelFolder();
            case ExcelFolderTypes.WorksheetsRelsExcelFolder:
                return new WorksheetsRelsExcelFolder();
            case ExcelFolderTypes.TablesExcelFolder:
                return new TablesExcelFolder();
            default:
                throw new Error('Unknown excel folder type!');
        }
    }
    static getExcelFile(type) {
        switch (type) {
            case ExcelFileTypes.RootRelsFile:
                return new RootRelsFile();
            case ExcelFileTypes.AppFile:
                return new AppFile();
            case ExcelFileTypes.CoreFile:
                return new CoreFile();
            case ExcelFileTypes.WorkbookRelsFile:
                return new WorkbookRelsFile();
            case ExcelFileTypes.ThemeFile:
                return new ThemeFile();
            case ExcelFileTypes.WorksheetFile:
                return new WorksheetFile();
            case ExcelFileTypes.StyleFile:
                return new StyleFile();
            case ExcelFileTypes.WorkbookFile:
                return new WorkbookFile();
            case ExcelFileTypes.ContentTypesFile:
                return new ContentTypesFile();
            case ExcelFileTypes.SharedStringsFile:
                return new SharedStringsFile();
            case ExcelFileTypes.WorksheetRelsFile:
                return new WorksheetRelsFile();
            case ExcelFileTypes.TablesFile:
                return new TablesFile();
            default:
                throw Error('Unknown excel file type!');
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhjZWwtZWxlbWVudHMtZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2lnbml0ZXVpLWFuZ3VsYXIvc3JjL2xpYi9zZXJ2aWNlcy9leGNlbC9leGNlbC1lbGVtZW50cy1mYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxjQUFjLEVBQ2QsZ0JBQWdCLEVBQ25CLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFDSCxPQUFPLEVBQ1AsZ0JBQWdCLEVBQ2hCLFFBQVEsRUFDUixZQUFZLEVBQ1osaUJBQWlCLEVBQ2pCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsU0FBUyxFQUNULFlBQVksRUFDWixnQkFBZ0IsRUFDaEIsYUFBYSxFQUNiLGlCQUFpQixFQUNwQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQ0gsbUJBQW1CLEVBQ25CLGVBQWUsRUFDZixtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2pCLGdCQUFnQixFQUNoQixxQkFBcUIsRUFDckIseUJBQXlCLEVBQ3pCLGFBQWEsRUFDYixpQkFBaUIsRUFDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQU96QixjQUFjO0FBQ2QsTUFBTSxPQUFPLG9CQUFvQjtJQUV0QixNQUFNLENBQUMsY0FBYyxDQUFDLElBQXNCO1FBQy9DLFFBQVEsSUFBSSxFQUFFLENBQUM7WUFDWCxLQUFLLGdCQUFnQixDQUFDLGVBQWU7Z0JBQ2pDLE9BQU8sSUFBSSxlQUFlLEVBQUUsQ0FBQztZQUNqQyxLQUFLLGdCQUFnQixDQUFDLG1CQUFtQjtnQkFDckMsT0FBTyxJQUFJLG1CQUFtQixFQUFFLENBQUM7WUFDckMsS0FBSyxnQkFBZ0IsQ0FBQyxtQkFBbUI7Z0JBQ3JDLE9BQU8sSUFBSSxtQkFBbUIsRUFBRSxDQUFDO1lBQ3JDLEtBQUssZ0JBQWdCLENBQUMsYUFBYTtnQkFDL0IsT0FBTyxJQUFJLGFBQWEsRUFBRSxDQUFDO1lBQy9CLEtBQUssZ0JBQWdCLENBQUMsaUJBQWlCO2dCQUNuQyxPQUFPLElBQUksaUJBQWlCLEVBQUUsQ0FBQztZQUNuQyxLQUFLLGdCQUFnQixDQUFDLGdCQUFnQjtnQkFDbEMsT0FBTyxJQUFJLGdCQUFnQixFQUFFLENBQUM7WUFDbEMsS0FBSyxnQkFBZ0IsQ0FBQyxxQkFBcUI7Z0JBQ3ZDLE9BQVEsSUFBSSxxQkFBcUIsRUFBRSxDQUFDO1lBQ3hDLEtBQUssZ0JBQWdCLENBQUMseUJBQXlCO2dCQUMzQyxPQUFPLElBQUkseUJBQXlCLEVBQUUsQ0FBQztZQUMzQyxLQUFLLGdCQUFnQixDQUFDLGlCQUFpQjtnQkFDbkMsT0FBTyxJQUFJLGlCQUFpQixFQUFFLENBQUM7WUFDbkM7Z0JBQ0ksTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1FBQ3RELENBQUM7SUFDTCxDQUFDO0lBRU0sTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFvQjtRQUMzQyxRQUFRLElBQUksRUFBRSxDQUFDO1lBQ1gsS0FBSyxjQUFjLENBQUMsWUFBWTtnQkFDNUIsT0FBUSxJQUFJLFlBQVksRUFBRSxDQUFDO1lBQy9CLEtBQUssY0FBYyxDQUFDLE9BQU87Z0JBQ3ZCLE9BQVEsSUFBSSxPQUFPLEVBQUUsQ0FBQztZQUMxQixLQUFLLGNBQWMsQ0FBQyxRQUFRO2dCQUN4QixPQUFPLElBQUksUUFBUSxFQUFFLENBQUM7WUFDMUIsS0FBSyxjQUFjLENBQUMsZ0JBQWdCO2dCQUNoQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsQyxLQUFLLGNBQWMsQ0FBQyxTQUFTO2dCQUN6QixPQUFPLElBQUksU0FBUyxFQUFFLENBQUM7WUFDM0IsS0FBSyxjQUFjLENBQUMsYUFBYTtnQkFDN0IsT0FBTyxJQUFJLGFBQWEsRUFBRSxDQUFDO1lBQy9CLEtBQUssY0FBYyxDQUFDLFNBQVM7Z0JBQ3pCLE9BQU8sSUFBSSxTQUFTLEVBQUUsQ0FBQztZQUMzQixLQUFLLGNBQWMsQ0FBQyxZQUFZO2dCQUM1QixPQUFPLElBQUksWUFBWSxFQUFFLENBQUM7WUFDOUIsS0FBSyxjQUFjLENBQUMsZ0JBQWdCO2dCQUNoQyxPQUFPLElBQUksZ0JBQWdCLEVBQUUsQ0FBQztZQUNsQyxLQUFLLGNBQWMsQ0FBQyxpQkFBaUI7Z0JBQ2pDLE9BQU8sSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1lBQ25DLEtBQUssY0FBYyxDQUFDLGlCQUFpQjtnQkFDakMsT0FBTyxJQUFJLGlCQUFpQixFQUFFLENBQUM7WUFDbkMsS0FBSyxjQUFjLENBQUMsVUFBVTtnQkFDMUIsT0FBTyxJQUFJLFVBQVUsRUFBRSxDQUFDO1lBQzVCO2dCQUNJLE1BQU0sS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDaEQsQ0FBQztJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gICAgRXhjZWxGaWxlVHlwZXMsXG4gICAgRXhjZWxGb2xkZXJUeXBlc1xufSBmcm9tICcuL2V4Y2VsLWVudW1zJztcblxuaW1wb3J0IHtcbiAgICBBcHBGaWxlLFxuICAgIENvbnRlbnRUeXBlc0ZpbGUsXG4gICAgQ29yZUZpbGUsXG4gICAgUm9vdFJlbHNGaWxlLFxuICAgIFNoYXJlZFN0cmluZ3NGaWxlLFxuICAgIFN0eWxlRmlsZSxcbiAgICBUYWJsZXNGaWxlLFxuICAgIFRoZW1lRmlsZSxcbiAgICBXb3JrYm9va0ZpbGUsXG4gICAgV29ya2Jvb2tSZWxzRmlsZSxcbiAgICBXb3Jrc2hlZXRGaWxlLFxuICAgIFdvcmtzaGVldFJlbHNGaWxlXG59IGZyb20gJy4vZXhjZWwtZmlsZXMnO1xuXG5pbXBvcnQge1xuICAgIERvY1Byb3BzRXhjZWxGb2xkZXIsXG4gICAgUm9vdEV4Y2VsRm9sZGVyLFxuICAgIFJvb3RSZWxzRXhjZWxGb2xkZXIsXG4gICAgVGFibGVzRXhjZWxGb2xkZXIsXG4gICAgVGhlbWVFeGNlbEZvbGRlcixcbiAgICBXb3Jrc2hlZXRzRXhjZWxGb2xkZXIsXG4gICAgV29ya3NoZWV0c1JlbHNFeGNlbEZvbGRlcixcbiAgICBYTEV4Y2VsRm9sZGVyLFxuICAgIFhMUmVsc0V4Y2VsRm9sZGVyXG59IGZyb20gJy4vZXhjZWwtZm9sZGVycyc7XG5cbmltcG9ydCB7XG4gICAgSUV4Y2VsRmlsZSxcbiAgICBJRXhjZWxGb2xkZXJcbn0gZnJvbSAnLi9leGNlbC1pbnRlcmZhY2VzJztcblxuLyoqIEBoaWRkZW4gKi9cbmV4cG9ydCBjbGFzcyBFeGNlbEVsZW1lbnRzRmFjdG9yeSB7XG5cbiAgICBwdWJsaWMgc3RhdGljIGdldEV4Y2VsRm9sZGVyKHR5cGU6IEV4Y2VsRm9sZGVyVHlwZXMpOiBJRXhjZWxGb2xkZXIge1xuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5Sb290RXhjZWxGb2xkZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBSb290RXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5Sb290UmVsc0V4Y2VsRm9sZGVyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUm9vdFJlbHNFeGNlbEZvbGRlcigpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZvbGRlclR5cGVzLkRvY1Byb3BzRXhjZWxGb2xkZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBEb2NQcm9wc0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRm9sZGVyVHlwZXMuWExFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFhMRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5YTFJlbHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFhMUmVsc0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRm9sZGVyVHlwZXMuVGhlbWVFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFRoZW1lRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5Xb3Jrc2hlZXRzRXhjZWxGb2xkZXI6XG4gICAgICAgICAgICAgICAgcmV0dXJuICBuZXcgV29ya3NoZWV0c0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRm9sZGVyVHlwZXMuV29ya3NoZWV0c1JlbHNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFdvcmtzaGVldHNSZWxzRXhjZWxGb2xkZXIoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGb2xkZXJUeXBlcy5UYWJsZXNFeGNlbEZvbGRlcjpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFRhYmxlc0V4Y2VsRm9sZGVyKCk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBleGNlbCBmb2xkZXIgdHlwZSEnKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RXhjZWxGaWxlKHR5cGU6IEV4Y2VsRmlsZVR5cGVzKTogSUV4Y2VsRmlsZSB7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Sb290UmVsc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICBuZXcgUm9vdFJlbHNGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLkFwcEZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuICBuZXcgQXBwRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Db3JlRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IENvcmVGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLldvcmtib29rUmVsc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3JrYm9va1JlbHNGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlRoZW1lRmlsZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFRoZW1lRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5Xb3Jrc2hlZXRGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgV29ya3NoZWV0RmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5TdHlsZUZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTdHlsZUZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuV29ya2Jvb2tGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgV29ya2Jvb2tGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLkNvbnRlbnRUeXBlc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBDb250ZW50VHlwZXNGaWxlKCk7XG4gICAgICAgICAgICBjYXNlIEV4Y2VsRmlsZVR5cGVzLlNoYXJlZFN0cmluZ3NGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU2hhcmVkU3RyaW5nc0ZpbGUoKTtcbiAgICAgICAgICAgIGNhc2UgRXhjZWxGaWxlVHlwZXMuV29ya3NoZWV0UmVsc0ZpbGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBXb3Jrc2hlZXRSZWxzRmlsZSgpO1xuICAgICAgICAgICAgY2FzZSBFeGNlbEZpbGVUeXBlcy5UYWJsZXNGaWxlOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVGFibGVzRmlsZSgpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBFcnJvcignVW5rbm93biBleGNlbCBmaWxlIHR5cGUhJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=